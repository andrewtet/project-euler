/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/


function App(numFactors){
	var self = this;
	self.number = 0;
	self.numFactors = numFactors;

	self.startTime = null;
	self.endTime = null;

	self.init = function(){

		self.startTime = new Date().getTime();

		self.instructions();
		self.getNumber();
		self.printNumber();

	};

	self.instructions = function(){
		console.log('The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:');
		console.log('1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...');
		console.log('Let us list the factors of the first seven triangle numbers:');
		console.log('1: 1');
		console.log('3: 1,3');
		console.log('6: 1,2,3,6');
		console.log('10: 1,2,5,10');
		console.log('15: 1,3,5,15');
		console.log('21: 1,3,7,21');
		console.log('28: 1,2,4,7,14,28');
		console.log('We can see that 28 is the first triangle number to have over five divisors.');
		console.log('What is the value of the first triangle number to have over five hundred divisors?');
	};

	self.getNumber = function(){

		var i = 1;
		var tNum = i * (1 + ((i - 1) / 2));
		var numFound = false;

		while(!numFound){
			tNum = i * (1 + ((i - 1) / 2));

			if((self.numFactors - 1) * 2 <= tNum){
				var factors = self.getNumberOfFactor(tNum);

				if(factors > 100){
					console.log( i, tNum, factors);
				}

				if(factors >= self.numFactors){
					numFound = true;
					self.number = tNum;
					break;
				}
			}
			i++;
		}

	};

	/*
	self.getNumberOfFactor = function(num){
		var numFactors = 0;

		if(num === 1){ return 1; }

		// only checking lower half since number can't be divisable by more than half (except itself)
		for(var i = 1; i <= Math.ceil(num/2); i++){
			if(num % i === 0){
				numFactors++;
			}
		}
		numFactors++ // Since number is divisable by itself

		return numFactors;
	};
	*/

	self.getNumberOfFactor = function(num){
		var workingNumber = num;
		var numFactors = 1;
		var factors = {};

		while(workingNumber > 1){
			for(var i = 2; i <= workingNumber; i++){
				if(workingNumber % i === 0){

					if(!factors[i]){
						factors[i] = 1;
					} else {
						factors[i]++;
					}

					workingNumber = workingNumber / i;
					break;
				}
			}
		}

		for(n in factors){
			numFactors *= (factors[n] + 1);
		}

		return numFactors;
	}

	self.printNumber = function(){
		console.log(self.number);

		self.endTime = new Date().getTime();

		console.log('Run Time: ' + (self.endTime - self.startTime) + ' ms');
	};
};

//Test
//var t = new App(6);
//t.init();

//var t2 = new App(150);
//t2.init();

var a = new App(500);
a.init();
